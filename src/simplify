#!/bin/bash

# Simplify all PDFs in a directory to remove watermark issues when converting to images.
# ./src/simplify docs/SCOE docs/SCOE-simplified

# Handle Ctrl+C gracefully
trap 'echo -e "\nInterrupted by user. Exiting..."; exit 1' INT

if [[ $# -ne 2 ]]; then
    echo "Usage: $0 <input_directory> <output_directory>"
    exit 1
fi

input_dir="$1"
output_dir="$2"

# Create output directory if it doesn't exist
mkdir -p "$output_dir"
# Count total number of files
TOTAL_FILES=$(find "$input_dir" -type f | wc -l)
echo "Found $TOTAL_FILES files to process"

# Initialize counter
CURRENT=0

# Recursively find all files in input directory
find "$input_dir" -type f | while read -r file; do
    ((CURRENT++))
    # Get relative path from input directory
    rel_path="${file#$input_dir/}"

    # Create output subdirectories as needed
    out_file="$output_dir/$rel_path"
    mkdir -p "$(dirname "$out_file")"

    # Skip if output file already exists
    if [[ -f "$out_file" ]]; then
        echo "($CURRENT/$TOTAL_FILES) Skipping existing file: $out_file"
        continue
    fi

    echo "($CURRENT/$TOTAL_FILES) $file -> $out_file"

    # If PDF file, simplify with gs, otherwise just copy
    if [[ "$(echo "$file" | tr '[:upper:]' '[:lower:]')" == *.pdf ]]; then
        tmp_file="/tmp/$RANDOM.pdf"
        gs \
            -o "$tmp_file" \
            -sDEVICE=pdfwrite \
            -dPDFSETTINGS=/printer \
            "$file"
        mv "$tmp_file" "$out_file"
    else
        cp "$file" "$out_file"
    fi
done
