#!/bin/bash

# Check if output directory argument is provided
if [[ $# -ne 1 ]]; then
    echo "Usage: $0 <output_directory>"
    exit 1
fi

# Website URL
WEBSITE="https://www.forpd.org/agendacenter"
PREFIX="https://www.forpd.org"

# Create output directory
OUTPUT_DIR="$1"
mkdir -p "${OUTPUT_DIR}"

# Fetch website content
echo "Fetching HTML content from ${WEBSITE}..."
HTML_CONTENT=$(curl -s "${WEBSITE}")

# Extract matching links
echo "Extracting links matching the pattern..."
LINKS=$(echo "${HTML_CONTENT}" | grep -oE "/AgendaCenter/ViewFile/Agenda/_?[0-9]+-[0-9]+\\?packet=true")

if [[ -z "${LINKS}" ]]; then
    echo "No matching links found."
    exit 1
fi

# Count total number of links
TOTAL_LINKS=$(echo "${LINKS}" | wc -l)
echo "Found ${TOTAL_LINKS} files to download"

# Download each link
echo "Downloading files..."
CURRENT=0
while read -r path; do
    if [[ -n "${path}" ]]; then
        ((CURRENT++))
        FILE_URL="${PREFIX}${path}"
        ORIG_FILENAME=$(basename "${path%%\?*}")

        # Convert filename from _MMDDYYYY-NNN to YYYY-MM-DD_NNN.pdf
        if [[ $ORIG_FILENAME =~ _([0-9]{2})([0-9]{2})([0-9]{4})-([0-9]+) ]]; then
            MONTH="${BASH_REMATCH[1]}"
            DAY="${BASH_REMATCH[2]}"
            YEAR="${BASH_REMATCH[3]}"
            NUMBER="${BASH_REMATCH[4]}"
            FILENAME="${YEAR}-${MONTH}-${DAY}_${NUMBER}.pdf"
        else
            FILENAME="${ORIG_FILENAME}.pdf"
        fi

        # Skip if file already exists
        if [[ -f "${OUTPUT_DIR}/${FILENAME}" ]]; then
            echo "(${CURRENT}/${TOTAL_LINKS}) Skipping existing file: ${FILENAME}"
            continue
        fi

        echo "(${CURRENT}/${TOTAL_LINKS}) Downloading: ${FILE_URL}"
        curl -o "${OUTPUT_DIR}/${FILENAME}" "${FILE_URL}" -s && echo "(${CURRENT}/${TOTAL_LINKS}) Downloaded: ${FILE_URL}" || echo "(${CURRENT}/${TOTAL_LINKS}) Failed: ${FILE_URL}"
    fi
done <<< "${LINKS}"

echo "All downloads complete."
