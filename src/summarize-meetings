#!/bin/bash

set -e

# Handle Ctrl+C gracefully
trap "echo 'Script interrupted'; exit 1" INT
# Check if directory is provided
if [ -z "$1" ]; then
  echo "Usage: $0 <directory> [after_date]"
  echo "Example: $0 docs/SJUSD 2024-06"
  exit 1
fi

DIR="${1%/}"

# Check if directory exists
if [ ! -d "$DIR" ]; then
  echo "Error: Directory $DIR does not exist"
  exit 1
fi

# Set AFTER to second argument if provided, otherwise default to 2024
AFTER="${2:-2024}"

# Get list of subdirectories and sort in reverse order
folders=($(find "$DIR" -maxdepth 1 -mindepth 1 -type d | awk -v after="$DIR/$AFTER" '$0 >= after' | sort -r))
total=${#folders[@]}

# Log all folders that will be processed
echo "Found $total folders to process:"
for folder in "${folders[@]}"; do
	echo "$folder"
done

# Process each subdirectory
for i in "${!folders[@]}"; do
  folder="${folders[$i]}"

  # TODO: SMUD, SMFD, FORPD, SJUSD, LRCCD, SCOE

  # Check for minutes files based on directory
  if [[ "$DIR" =~ ^docs/(SJWD|FOWD|SJUSD|LRCCD|SCOE|SMFD)$ ]]; then
    if ! find "$folder" -maxdepth 1 -type f -iname "*minutes*.md" | grep -q .; then
      echo "Skipping $folder - no minutes file found ($(($i + 1))/$total)" >&2
      continue
    fi
  fi

  # Clean up any double slashes in path
  # Skip if summary.md already exists
  if [ -f "$folder/summary.md" ]; then
    echo "Skipping $folder - summary.md already exists ($(($i + 1))/$total)"
    continue
  fi

  # Check if directory has any .md, .html, or .txt files
  if ! find "$folder" -maxdepth 1 -type f \( -name "*.md" -o -name "*.html" -o -name "*.txt" \) | grep -q .; then
    echo "Skipping $folder - no .md, .html, or .txt files found ($(($i + 1))/$total)" >&2
    continue
  fi

  # Create list of files in directory (excluding summary files)
  # find "$folder" -maxdepth 1 -type f -not -name "summary*" | sort > "$folder/summary-files.txt"

  echo "Processing $folder... ($(($i + 1))/$total)"
  output=$("$(dirname "$0")/summarize" "$folder")
  echo "$output" > "$folder/summary.md"
done
